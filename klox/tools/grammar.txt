Expr ->
Binary: Expr left, Token operator, Expr right
Call: Expr callee, Token paren, List<Expr> arguments
Grouping: Expr expression
Block: List<Stmt> statements
When: Expr? initializer, List<CasePair> cases, Expr? catchall
Literal: Any? value
Unary: Token operator, Expr right
VariableExpression: Token name
Subscription: Expr left, Expr index
Slice: Expr left, Expr start, Expr end

Stmt ->
Break:
Continue:
ExpressionStatement: Expr expression
ForStatement: Token loopVariable, Expr loopOver, Expr block
VarStatement: Token name, Expr? initializer