package lox

// Generated by generate_ast ast 2024-01-20 17:41:56

interface Stmt { 
    fun<R> accept(visitor: StmtVisitor<R>): R
}

interface StmtVisitor<R> {
    fun visitExpressionStatement(stmt: ExpressionStatement): R
	fun visitVar(stmt: Var): R
}

class ExpressionStatement(val expression: Expr) : Stmt {
    override fun<R> accept(visitor: StmtVisitor<R>): R {
        return visitor.visitExpressionStatement(this)
    }
}

class Var(val name: Token, val initializer: Expr?) : Stmt {
    override fun<R> accept(visitor: StmtVisitor<R>): R {
        return visitor.visitVar(this)
    }
}
